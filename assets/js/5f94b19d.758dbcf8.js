"use strict";(self.webpackChunkredux_saga_router=self.webpackChunkredux_saga_router||[]).push([[33],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(r),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,u(u({ref:t},l),{},{components:r})):n.createElement(f,u({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,u=new Array(a);u[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,u[1]=c;for(var i=2;i<a;i++)u[i]=r[i];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3380:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return p}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),u=["components"],c={sidebar_position:6},s="Hooks",i={unversionedId:"hooks",id:"hooks",title:"Hooks",description:"Available hooks",source:"@site/docs/hooks.md",sourceDirName:".",slug:"/hooks",permalink:"/redux-saga-router-docs/docs/hooks",editUrl:"https://github.com/infonomic/redux-saga-router-docs/tree/main/docs/hooks.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Dispatch",permalink:"/redux-saga-router-docs/docs/dispatch"},next:{title:"Components",permalink:"/redux-saga-router-docs/docs/components"}},l={},p=[{value:"useCurrentLocation",id:"usecurrentlocation",level:3},{value:"useLocationStack",id:"uselocationstack",level:3},{value:"useParams",id:"useparams",level:3},{value:"useCurrentRoute",id:"usecurrentroute",level:3},{value:"useBreadcrumbs",id:"usebreadcrumbs",level:3},{value:"useIsActive",id:"useisactive",level:3}],d={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hooks"},"Hooks"),(0,a.kt)("p",null,"Available hooks"),(0,a.kt)("h3",{id:"usecurrentlocation"},"useCurrentLocation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const location = useCurrentLocation()\n")),(0,a.kt)("h3",{id:"uselocationstack"},"useLocationStack"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const locationStack = useLocationStack()\n")),(0,a.kt)("h3",{id:"useparams"},"useParams"),(0,a.kt)("p",null,"This hook is used to get dynamic params from url"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const { param1, param2 } = useParams()\n")),(0,a.kt)("h3",{id:"usecurrentroute"},"useCurrentRoute"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const currentRoute = useCurrentRoute()\n")),(0,a.kt)("h3",{id:"usebreadcrumbs"},"useBreadcrumbs"),(0,a.kt)("p",null,"For more information on how to implement ",(0,a.kt)("inlineCode",{parentName:"p"},"useBreadcrumbs()")," check ",(0,a.kt)("a",{parentName:"p",href:"/redux-saga-router-docs/docs/components/#breadcrumbs"},"this doc")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const breadcrumbs = useBreadcrumbs()\n")),(0,a.kt)("h3",{id:"useisactive"},"useIsActive"),(0,a.kt)("p",null,"For more information on ",(0,a.kt)("inlineCode",{parentName:"p"},"to")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"exact")," props check ",(0,a.kt)("a",{parentName:"p",href:"/redux-saga-router-docs/docs/components/"},"this doc")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const isActive = useIsActive(to, exact) \n")))}m.isMDXComponent=!0}}]);