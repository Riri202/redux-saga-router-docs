"use strict";(self.webpackChunkredux_saga_router=self.webpackChunkredux_saga_router||[]).push([[155],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9912:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:4},c="Sagas",u={unversionedId:"sagas",id:"sagas",title:"Sagas",description:"Since the router is saga-based, it makes sense to define sagas for router targets and api requests.",source:"@site/docs/sagas.md",sourceDirName:".",slug:"/sagas",permalink:"/redux-saga-router/docs/sagas",editUrl:"https://github.com/infonomic/redux-saga-router/tree/main/docs/sagas.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Routes",permalink:"/redux-saga-router/docs/routes"},next:{title:"Dispatch",permalink:"/redux-saga-router/docs/dispatch"}},l={},p=[{value:"setLocation",id:"setlocation",level:3},{value:"navigate",id:"navigate",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sagas"},"Sagas"),(0,o.kt)("p",null,"Since the router is saga-based, it makes sense to define sagas for router targets and api requests."),(0,o.kt)("p",null,"The router provides two ways of navigation. You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"setLocation")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"navigate")),(0,o.kt)("h3",{id:"setlocation"},"setLocation"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"setLocation")," stores the location in the ",(0,o.kt)("inlineCode",{parentName:"p"},"locationStack")," current location. It accepts ",(0,o.kt)("inlineCode",{parentName:"p"},"CLEAR")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"PUSH")," params that determine whether the new location will replace the current location stack, or be added to it. ",(0,o.kt)("inlineCode",{parentName:"p"},"setLocation")," will ignore any router configured sagas. "),(0,o.kt)("p",null,"For more information on how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"CLEAR")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"PUSH")," props check ",(0,o.kt)("a",{parentName:"p",href:"/docs/components"},"this doc")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"* fetchList({ payload: { to, mode } }) {\n  const { query: params } = to\n\n  yield put(mutations.setLoading())\n  yield put(setLocation(to, mode))\n\n  try {\n    const response = yield call(apiRequest, {\n      method: 'get',\n      url: '/backend-endpoint',\n      params,\n    })\n    yield put(mutations.mutation(response))\n  } catch (error) {\n    // Error handling\n  }\n},\n")),(0,o.kt)("h3",{id:"navigate"},"navigate"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"navigate")," is identical to ",(0,o.kt)("inlineCode",{parentName:"p"},"setLocation")," above, but will also  call and router configured sagas."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"* destroy({ payload: { id, data } }) {\n    yield put(mutations.setLoading())\n    try {\n      yield call(apiRequest, { method: 'delete', url: `/backend-endpoint/${id}` })\n      yield put(mutations.mutation({ id }))\n      yield put(navigate(L.LocationModuleName.locationName()))\n    } catch (error) {\n      // Error handling\n    }\n  },\n")))}m.isMDXComponent=!0}}]);